/******************************************************************************/
/***          Generated by IBExpert 2012.02.21 14/11/2021 09:29:28          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES ISO8859_1;

SET CLIENTLIB 'FBCLIENT.dll';

CREATE DATABASE '127.0.0.1:C:\Users\GUILH\Documents\Desenvolvimento\Bancos\BD.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET ISO8859_1;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_TBL_CARTORIO_ID;
SET GENERATOR GEN_TBL_CARTORIO_ID TO 1;

CREATE GENERATOR GEN_TBL_CATEGORIA_ID;
SET GENERATOR GEN_TBL_CATEGORIA_ID TO 163;

CREATE GENERATOR GEN_TBL_CIDADE_ID;
SET GENERATOR GEN_TBL_CIDADE_ID TO 14;

CREATE GENERATOR GEN_TBL_EST_ENTRADA_ID;
SET GENERATOR GEN_TBL_EST_ENTRADA_ID TO 155;

CREATE GENERATOR GEN_TBL_EST_ESTOQUE_ID;
SET GENERATOR GEN_TBL_EST_ESTOQUE_ID TO 201;

CREATE GENERATOR GEN_TBL_EST_GRUPO_ID;
SET GENERATOR GEN_TBL_EST_GRUPO_ID TO 47;

CREATE GENERATOR GEN_TBL_EST_ITENS_ENTRADA_ID;
SET GENERATOR GEN_TBL_EST_ITENS_ENTRADA_ID TO 394;

CREATE GENERATOR GEN_TBL_EST_ITENS_SAIDA_ID;
SET GENERATOR GEN_TBL_EST_ITENS_SAIDA_ID TO 147;

CREATE GENERATOR GEN_TBL_EST_PRODUTO_ID;
SET GENERATOR GEN_TBL_EST_PRODUTO_ID TO 221;

CREATE GENERATOR GEN_TBL_EST_SAIDA_ID;
SET GENERATOR GEN_TBL_EST_SAIDA_ID TO 68;

CREATE GENERATOR GEN_TBL_EST_UNIDADE_MEDIDA_ID;
SET GENERATOR GEN_TBL_EST_UNIDADE_MEDIDA_ID TO 3;

CREATE GENERATOR GEN_TBL_FORNECEDOR_ID;
SET GENERATOR GEN_TBL_FORNECEDOR_ID TO 1;

CREATE GENERATOR GEN_TBL_FUNCAO_ID;
SET GENERATOR GEN_TBL_FUNCAO_ID TO 0;

CREATE GENERATOR GEN_TBL_LOG_ID;
SET GENERATOR GEN_TBL_LOG_ID TO 5197;

CREATE GENERATOR GEN_TBL_PAST_GRUPO_ID;
SET GENERATOR GEN_TBL_PAST_GRUPO_ID TO 0;

CREATE GENERATOR GEN_TBL_PAST_GRUPO_MEMBRO_ID;
SET GENERATOR GEN_TBL_PAST_GRUPO_MEMBRO_ID TO 0;

CREATE GENERATOR GEN_TBL_PAST_IGREJA_ID;
SET GENERATOR GEN_TBL_PAST_IGREJA_ID TO 0;

CREATE GENERATOR GEN_TBL_PAST_MEMBRO_ID;
SET GENERATOR GEN_TBL_PAST_MEMBRO_ID TO 1;

CREATE GENERATOR GEN_TBL_PAST_PASTOR_ID;
SET GENERATOR GEN_TBL_PAST_PASTOR_ID TO 0;

CREATE GENERATOR GEN_TBL_PATRIMONIO_ID;
SET GENERATOR GEN_TBL_PATRIMONIO_ID TO 3536;

CREATE GENERATOR GEN_TBL_PAT_IMOVEL_ID;
SET GENERATOR GEN_TBL_PAT_IMOVEL_ID TO 1;

CREATE GENERATOR GEN_TBL_PAT_MOTIVO_BAIXA_ID;
SET GENERATOR GEN_TBL_PAT_MOTIVO_BAIXA_ID TO 0;

CREATE GENERATOR GEN_TBL_PROFISSAO_ID;
SET GENERATOR GEN_TBL_PROFISSAO_ID TO 0;

CREATE GENERATOR GEN_TBL_RESPONSAVEL_ID;
SET GENERATOR GEN_TBL_RESPONSAVEL_ID TO 49;

CREATE GENERATOR GEN_TBL_SETOR_ID;
SET GENERATOR GEN_TBL_SETOR_ID TO 34;

CREATE GENERATOR GEN_TBL_TRANSFERENCIA_ID;
SET GENERATOR GEN_TBL_TRANSFERENCIA_ID TO 0;

CREATE GENERATOR GEN_TBL_UNIDADE_ID;
SET GENERATOR GEN_TBL_UNIDADE_ID TO 42;

CREATE GENERATOR GEN_TBL_USUARIO_ID;
SET GENERATOR GEN_TBL_USUARIO_ID TO 19;

CREATE GENERATOR GEN_TBL_USUARIO_UNIDADE_ID;
SET GENERATOR GEN_TBL_USUARIO_UNIDADE_ID TO 274;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE TBL_CARTORIO (
    ID               INTEGER NOT NULL,
    NOME             VARCHAR(120) NOT NULL,
    CNPJ             VARCHAR(18) NOT NULL,
    ENDERECO         VARCHAR(120),
    ENDERECO_BAIRRO  VARCHAR(60),
    ENDERECO_NUMERO  VARCHAR(10),
    ID_CIDADE        INTEGER,
    CEP              VARCHAR(15),
    TELEFONE1        VARCHAR(15),
    TELEFONE2        VARCHAR(15),
    CELULAR          VARCHAR(15),
    EMAIL            VARCHAR(40),
    OBSERVACAO       BLOB SUB_TYPE 0 SEGMENT SIZE 350,
    DATA_CADASTRO    DATE NOT NULL,
    ID_USUARIO       INTEGER NOT NULL
);

CREATE TABLE TBL_CATEGORIA (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_CIDADE (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL,
    UF    CHAR(2)
);

CREATE TABLE TBL_EST_ENTRADA (
    ID                  INTEGER NOT NULL,
    ID_FORNECEDOR       INTEGER NOT NULL,
    NUMERO_NOTA_FISCAL  INTEGER,
    DATA_EMISSAO_NOTA   DATE,
    DATA_ENTRADA        DATE NOT NULL,
    VALOR               NUMERIC(15,2),
    ID_UNIDADE          INTEGER NOT NULL,
    DATA_CADASTRO       DATE NOT NULL,
    ID_USUARIO          INTEGER NOT NULL
);

CREATE TABLE TBL_EST_ESTOQUE (
    ID                INTEGER NOT NULL,
    ID_PRODUTO        INTEGER NOT NULL,
    QUANTIDADE_ATUAL  INTEGER NOT NULL
);

CREATE TABLE TBL_EST_GRUPO (
    ID          INTEGER NOT NULL,
    NOME        VARCHAR(120) NOT NULL,
    ID_UNIDADE  INTEGER NOT NULL
);

CREATE TABLE TBL_EST_ITENS_ENTRADA (
    ID              INTEGER NOT NULL,
    ID_ENTRADA      INTEGER NOT NULL,
    ID_PRODUTO      INTEGER NOT NULL,
    QUANTIDADE      INTEGER NOT NULL,
    VALOR_UNITARIO  NUMERIC(15,2)
);

CREATE TABLE TBL_EST_ITENS_SAIDA (
    ID          INTEGER NOT NULL,
    ID_SAIDA    INTEGER NOT NULL,
    ID_PRODUTO  INTEGER NOT NULL,
    QUANTIDADE  INTEGER NOT NULL
);

CREATE TABLE TBL_EST_PRODUTO (
    ID                 INTEGER NOT NULL,
    NOME               VARCHAR(120) NOT NULL,
    ID_UNIDADE_MEDIDA  INTEGER NOT NULL,
    ID_GRUPO           INTEGER NOT NULL,
    QUANTIDADE_MINIMA  INTEGER,
    ID_UNIDADE         INTEGER NOT NULL,
    DATA_CADASTRO      DATE NOT NULL,
    ID_USUARIO         INTEGER NOT NULL
);

CREATE TABLE TBL_EST_SAIDA (
    ID             INTEGER NOT NULL,
    DATA_SAIDA     DATE NOT NULL,
    OBSERVACOES    BLOB SUB_TYPE 1 SEGMENT SIZE 250,
    ID_UNIDADE     INTEGER NOT NULL,
    DATA_CADASTRO  DATE NOT NULL,
    ID_USUARIO     INTEGER NOT NULL
);

CREATE TABLE TBL_EST_UNIDADE_MEDIDA (
    ID          INTEGER NOT NULL,
    NOME        VARCHAR(120) NOT NULL,
    ABREVIACAO  CHAR(4)
);

CREATE TABLE TBL_FORNECEDOR (
    ID               INTEGER NOT NULL,
    NOME             VARCHAR(120) NOT NULL,
    CNPJ             VARCHAR(18) NOT NULL,
    ENDERECO         VARCHAR(120),
    ENDERECO_BAIRRO  VARCHAR(60),
    ENDERECO_NUMERO  VARCHAR(10),
    ID_CIDADE        INTEGER,
    CEP              VARCHAR(15),
    TELEFONE1        VARCHAR(15),
    TELEFONE2        VARCHAR(15),
    CELULAR          VARCHAR(15),
    EMAIL            VARCHAR(40),
    OBSERVACAO       BLOB SUB_TYPE 0 SEGMENT SIZE 350,
    DATA_CADASTRO    DATE NOT NULL,
    ID_USUARIO       INTEGER NOT NULL
);

CREATE TABLE TBL_FUNCAO (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_LOG (
    ID          INTEGER NOT NULL,
    DESCRICAO   VARCHAR(200) NOT NULL,
    NIVEL       INTEGER NOT NULL,
    ID_USUARIO  INTEGER NOT NULL,
    DATA_LOG    TIMESTAMP NOT NULL,
    ID_UNIDADE  INTEGER NOT NULL
);

CREATE TABLE TBL_MOTIVO_TRANSFERENCIA (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(60) NOT NULL
);

CREATE TABLE TBL_PAST_GRUPO (
    ID             INTEGER NOT NULL,
    NOME           VARCHAR(120) NOT NULL,
    ID_UNIDADE     INTEGER NOT NULL,
    DATA_CADASTRO  DATE NOT NULL,
    ID_USUARIO     INTEGER NOT NULL
);

CREATE TABLE TBL_PAST_GRUPO_MEMBRO (
    ID         INTEGER NOT NULL,
    ID_MEMBRO  INTEGER NOT NULL,
    ID_GRUPO   INTEGER NOT NULL
);

CREATE TABLE TBL_PAST_IGREJA (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_PAST_MEMBRO (
    ID                        INTEGER NOT NULL,
    NOME                      VARCHAR(120) NOT NULL,
    CPF                       VARCHAR(14),
    RG                        VARCHAR(12),
    ESTADO_CIVIL              VARCHAR(13),
    DATA_NASCIMENTO           DATE,
    TIPO_SANGUINEO            VARCHAR(3),
    SEXO                      VARCHAR(9),
    TELEFONE                  VARCHAR(15),
    CELULAR                   VARCHAR(15),
    GRAU_INSTRUCAO            VARCHAR(29),
    EMAIL                     VARCHAR(40),
    ID_PROFISSAO              INTEGER,
    NOME_MAE                  VARCHAR(120),
    NOME_PAI                  VARCHAR(120),
    NOME_CONJUGE              VARCHAR(120),
    DATA_CASAMENTO            DATE,
    ENDERECO                  VARCHAR(120),
    ENDERECO_BAIRRO           VARCHAR(60),
    ENDERECO_NUMERO           VARCHAR(10),
    CEP                       VARCHAR(15),
    ID_CIDADE                 INTEGER,
    ID_IGREJA_BATISMO         INTEGER,
    ID_PASTOR_BATISMO         INTEGER,
    DATA_ADMISSAO             DATE,
    MODO_ADMISSAO             SMALLINT,
    IGREJAS_FOI_MEMBRO        VARCHAR(120),
    DIZIMISTA                 SMALLINT,
    OFERTANTE                 SMALLINT,
    FUNCAO_EXERCEU_IGREJA     INTEGER,
    FUNCAO_GOSTARIA_EXERCER   INTEGER,
    OBSERVACOES               BLOB SUB_TYPE 1 SEGMENT SIZE 500,
    ID_UNIDADE                INTEGER NOT NULL,
    SITUACAO                  SMALLINT NOT NULL,
    TIPOS_SAIDA_MEMBRO        SMALLINT,
    ID_NATURALIDADE           INTEGER,
    NACIONALIDADE             SMALLINT,
    DATA_SAIDA                DATE,
    DATA_CADASTRO             DATE,
    ID_USUARIO                INTEGER,
    MINISTERIO_ENSINO         SMALLINT,
    MINISTERIO_LOUVOR         SMALLINT,
    MINISTERIO_INFANTIL       SMALLINT,
    MINISTERIO_BERCARIO       SMALLINT,
    MINISTERIO_ACOLHIMENTO    SMALLINT,
    MINISTERIO_SURDOS         SMALLINT,
    MINISTERIO_COMUNICACAO    SMALLINT,
    MINISTERIO_ADMINISTRACAO  SMALLINT,
    MINISTERIO_EVANGELISMO    SMALLINT
);

CREATE TABLE TBL_PAST_PASTOR (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_PAT_IMOVEL (
    ID                           INTEGER NOT NULL,
    NOME                         VARCHAR(120) NOT NULL,
    ENDERECO                     VARCHAR(120),
    ENDERECO_BAIRRO              VARCHAR(60),
    ENDERECO_NUMERO              VARCHAR(10),
    ID_CIDADE                    INTEGER,
    CEP                          VARCHAR(15),
    ZONA_RESIDENCIA              SMALLINT,
    TIPO_IMOVEL                  VARCHAR(40),
    METRAGEM                     VARCHAR(20),
    LIVRO                        INTEGER,
    FOLHA                        INTEGER,
    NOME_VENDEDOR                VARCHAR(120),
    RG_VENDEDOR                  VARCHAR(12),
    CPF_CNPJ_VENDEDOR            VARCHAR(18),
    NATUREZA_CONTRATO            VARCHAR(30),
    VALOR_COMPRA                 NUMERIC(15,2),
    DATA_COMPRA                  DATE,
    PROTOCOLO_REGISTRO_CARTORIO  INTEGER,
    ID_CARTORIO                  INTEGER,
    OBSERVACAO                   BLOB SUB_TYPE 0 SEGMENT SIZE 350,
    DATA_CADASTRO                DATE NOT NULL,
    ID_USUARIO                   INTEGER NOT NULL,
    ID_UNIDADE                   INTEGER NOT NULL,
    NUMERO_IMOVEL                INTEGER
);

CREATE TABLE TBL_PAT_MOTIVO_BAIXA (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_PATRIMONIO (
    ID                   INTEGER NOT NULL,
    NUMERO_PATRIMONIO    INTEGER NOT NULL,
    NOME                 VARCHAR(250) NOT NULL,
    TIPO_AQUISICAO       INTEGER,
    MARCA                VARCHAR(80),
    ESTADO               INTEGER NOT NULL,
    VALOR                NUMERIC(15,2),
    ID_UNIDADE           INTEGER NOT NULL,
    ID_SETOR             INTEGER NOT NULL,
    ID_CATEGORIA         INTEGER NOT NULL,
    ID_FORNECEDOR        INTEGER NOT NULL,
    SITUACAO             INTEGER NOT NULL,
    DATA_AQUISICAO       DATE,
    NUMERO_NOTA_FISCAL   INTEGER,
    DATA_IMPLANTACAO     DATE,
    DATA_FINAL_GARANTIA  DATE,
    OBSERVACOES          BLOB SUB_TYPE 1 SEGMENT SIZE 350,
    DATA_CADASTRO        DATE NOT NULL,
    DATA_BAIXA           DATE,
    ID_USUARIO           INTEGER NOT NULL,
    ID_MOTIVO_BAIXA      INTEGER
);

CREATE TABLE TBL_PROFISSAO (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(120) NOT NULL
);

CREATE TABLE TBL_RESPONSAVEL (
    ID               INTEGER NOT NULL,
    NOME             VARCHAR(120) NOT NULL,
    CPF              VARCHAR(14),
    TELEFONE         VARCHAR(15),
    CELULAR          VARCHAR(15),
    ID_UNIDADE       INTEGER NOT NULL,
    ENDERECO         VARCHAR(120),
    ENDERECO_BAIRRO  VARCHAR(60),
    ENDERECO_NUMERO  VARCHAR(10),
    DATA_CADASTRO    DATE NOT NULL,
    ID_USUARIO       INTEGER NOT NULL
);

CREATE TABLE TBL_SETOR (
    ID                    INTEGER NOT NULL,
    NOME                  VARCHAR(120) NOT NULL,
    ENDERECO              VARCHAR(120),
    ENDERECO_NUMERO       VARCHAR(10),
    ENDERECO_BAIRRO       VARCHAR(60),
    TELEFONE              VARCHAR(15),
    ID_CIDADE             INTEGER,
    ID_RESPONSAVEL_ATUAL  INTEGER,
    ID_UNIDADE            INTEGER NOT NULL,
    DATA_CADASTRO         DATE NOT NULL,
    ID_USUARIO            INTEGER NOT NULL,
    ATIVO                 SMALLINT
);

CREATE TABLE TBL_TRANSFERENCIA (
    ID                INTEGER NOT NULL,
    DATA              DATE NOT NULL,
    ID_SETOR_ORIGEM   INTEGER NOT NULL,
    ID_SETOR_DESTINO  INTEGER NOT NULL,
    ID_MOTIVO         INTEGER NOT NULL,
    ID_UNIDADE        INTEGER NOT NULL
);

CREATE TABLE TBL_TRANSFERENCIA_ITENS (
    ID_TRANSFERENCIA  INTEGER NOT NULL,
    ID_PATRIMONIO     INTEGER NOT NULL
);

CREATE TABLE TBL_TRANSFERENCIA_PATRIMONIO (
    ID                  INTEGER NOT NULL,
    MOTIVO              VARCHAR(120) NOT NULL,
    ID_SETOR_ORIGEM     INTEGER NOT NULL,
    ID_SETOR_DESTINO    INTEGER NOT NULL,
    ID_PATRIMONIO       INTEGER NOT NULL,
    DATA_TRANSFERENCIA  INTEGER,
    ID_USUARIO          INTEGER
);

CREATE TABLE TBL_UNIDADE (
    ID               INTEGER NOT NULL,
    NOME             VARCHAR(120) NOT NULL,
    CNPJ             VARCHAR(18),
    TELEFONE         VARCHAR(15),
    ENDERECO         VARCHAR(120),
    ENDERECO_NUMERO  VARCHAR(10),
    ENDERECO_BAIRRO  VARCHAR(60),
    ID_CIDADE        INTEGER,
    CEP              VARCHAR(15),
    ATIVO            INTEGER NOT NULL,
    DATA_CADASTRO    DATE NOT NULL,
    ID_USUARIO       INTEGER NOT NULL
);

CREATE TABLE TBL_USUARIO (
    ID             INTEGER NOT NULL,
    NOME           VARCHAR(120) NOT NULL,
    USUARIO        VARCHAR(40) NOT NULL,
    ADMINISTRADOR  INTEGER NOT NULL,
    SITUACAO       INTEGER NOT NULL,
    SENHA          VARCHAR(40) NOT NULL
);

CREATE TABLE TBL_USUARIO_UNIDADE (
    ID          INTEGER NOT NULL,
    ID_USUARIO  INTEGER NOT NULL,
    ID_UNIDADE  INTEGER NOT NULL
);



/******************************************************************************/
/***                           Unique Constraints                           ***/
/******************************************************************************/

ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT UNQ1_TBL_PATRIMONIO UNIQUE (NUMERO_PATRIMONIO, ID_UNIDADE);
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT UNQ1_TBL_PAT_IMOVEL UNIQUE (NUMERO_IMOVEL);
ALTER TABLE TBL_USUARIO ADD CONSTRAINT UNQ1_TBL_USUARIO UNIQUE (USUARIO);


/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE TBL_CARTORIO ADD CONSTRAINT PK_TBL_CARTORIO PRIMARY KEY (ID);
ALTER TABLE TBL_CATEGORIA ADD CONSTRAINT PK_TBL_CATEGORIA PRIMARY KEY (ID);
ALTER TABLE TBL_CIDADE ADD CONSTRAINT PK_TBL_CIDADE PRIMARY KEY (ID);
ALTER TABLE TBL_EST_ENTRADA ADD CONSTRAINT PK_TBL_EST_ENTRADA PRIMARY KEY (ID);
ALTER TABLE TBL_EST_ESTOQUE ADD CONSTRAINT PK_TBL_EST_ESTOQUE PRIMARY KEY (ID);
ALTER TABLE TBL_EST_GRUPO ADD CONSTRAINT PK_TBL_EST_GRUPO PRIMARY KEY (ID);
ALTER TABLE TBL_EST_ITENS_ENTRADA ADD CONSTRAINT PK_TBL_EST_ITENS_ENTRADA PRIMARY KEY (ID);
ALTER TABLE TBL_EST_ITENS_SAIDA ADD CONSTRAINT PK_TBL_EST_ITENS_SAIDA PRIMARY KEY (ID);
ALTER TABLE TBL_EST_PRODUTO ADD CONSTRAINT PK_TBL_EST_PRODUTO PRIMARY KEY (ID);
ALTER TABLE TBL_EST_SAIDA ADD CONSTRAINT PK_TBL_EST_SAIDA PRIMARY KEY (ID);
ALTER TABLE TBL_EST_UNIDADE_MEDIDA ADD CONSTRAINT PK_TBL_EST_UNIDADE_MEDIDA PRIMARY KEY (ID);
ALTER TABLE TBL_FORNECEDOR ADD CONSTRAINT PK_TBL_FORNECEDOR PRIMARY KEY (ID);
ALTER TABLE TBL_FUNCAO ADD CONSTRAINT PK_TBL_FUNCAO PRIMARY KEY (ID);
ALTER TABLE TBL_LOG ADD CONSTRAINT PK_TBL_LOG PRIMARY KEY (ID);
ALTER TABLE TBL_MOTIVO_TRANSFERENCIA ADD CONSTRAINT PK_TBL_MOTIVO_TRANSFERENCIA PRIMARY KEY (ID);
ALTER TABLE TBL_PAST_GRUPO ADD CONSTRAINT PK_TBL_PAST_GRUPO PRIMARY KEY (ID);
ALTER TABLE TBL_PAST_GRUPO_MEMBRO ADD CONSTRAINT PK_TBL_PAST_GRUPO_MEMBRO PRIMARY KEY (ID);
ALTER TABLE TBL_PAST_IGREJA ADD CONSTRAINT PK_TBL_PAST_IGREJA PRIMARY KEY (ID);
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT PK_TBL_PAST_MEMBRO PRIMARY KEY (ID);
ALTER TABLE TBL_PAST_PASTOR ADD CONSTRAINT PK_TBL_PAST_PASTOR PRIMARY KEY (ID);
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT PK_TBL_PATRIMONIO PRIMARY KEY (ID);
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT PK_TBL_PAT_IMOVEL PRIMARY KEY (ID);
ALTER TABLE TBL_PAT_MOTIVO_BAIXA ADD CONSTRAINT PK_TBL_PAT_MOTIVO_BAIXA PRIMARY KEY (ID);
ALTER TABLE TBL_PROFISSAO ADD CONSTRAINT PK_TBL_PROFISSAO PRIMARY KEY (ID);
ALTER TABLE TBL_RESPONSAVEL ADD CONSTRAINT PK_TBL_RESPONSAVEL PRIMARY KEY (ID);
ALTER TABLE TBL_SETOR ADD CONSTRAINT PK_TBL_SETOR PRIMARY KEY (ID);
ALTER TABLE TBL_TRANSFERENCIA ADD CONSTRAINT PK_TBL_TRANSFERENCIA PRIMARY KEY (ID);
ALTER TABLE TBL_TRANSFERENCIA_ITENS ADD CONSTRAINT PK_TBL_TRANSFERENCIA_ITENS PRIMARY KEY (ID_TRANSFERENCIA, ID_PATRIMONIO);
ALTER TABLE TBL_TRANSFERENCIA_PATRIMONIO ADD CONSTRAINT PK_TBL_TRANSFERENCIA_PATRIMONIO PRIMARY KEY (ID);
ALTER TABLE TBL_UNIDADE ADD CONSTRAINT PK_TBL_UNIDADE PRIMARY KEY (ID);
ALTER TABLE TBL_USUARIO ADD CONSTRAINT PK_TBL_USUARIO PRIMARY KEY (ID);
ALTER TABLE TBL_USUARIO_UNIDADE ADD CONSTRAINT PK_TBL_USUARIO_UNIDADE PRIMARY KEY (ID);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE TBL_CARTORIO ADD CONSTRAINT FK_TBL_CARTORIO_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_CARTORIO ADD CONSTRAINT FK_TBL_CARTORIO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ENTRADA ADD CONSTRAINT FK_TBL_EST_ENTRADA_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES TBL_FORNECEDOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ENTRADA ADD CONSTRAINT FK_TBL_EST_ENTRADA_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ENTRADA ADD CONSTRAINT FK_TBL_EST_ENTRADA_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ESTOQUE ADD CONSTRAINT FK_TBL_EST_ESTOQUE_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES TBL_EST_PRODUTO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_GRUPO ADD CONSTRAINT FK_TBL_EST_GRUPO_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ITENS_ENTRADA ADD CONSTRAINT FK_TBL_EST_ITENS_ENTRADA_ENTRAD FOREIGN KEY (ID_ENTRADA) REFERENCES TBL_EST_ENTRADA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ITENS_ENTRADA ADD CONSTRAINT FK_TBL_EST_ITENS_ENTRADA_PRODUT FOREIGN KEY (ID_PRODUTO) REFERENCES TBL_EST_PRODUTO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ITENS_SAIDA ADD CONSTRAINT FK_TBL_EST_ITENS_SAIDA_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES TBL_EST_PRODUTO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_ITENS_SAIDA ADD CONSTRAINT FK_TBL_EST_ITENS_SAIDA_SAIDA FOREIGN KEY (ID_SAIDA) REFERENCES TBL_EST_SAIDA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_PRODUTO ADD CONSTRAINT FK_TBL_EST_PRODUTO_GRUPO FOREIGN KEY (ID_GRUPO) REFERENCES TBL_EST_GRUPO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_PRODUTO ADD CONSTRAINT FK_TBL_EST_PRODUTO_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_PRODUTO ADD CONSTRAINT FK_TBL_EST_PRODUTO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_PRODUTO ADD CONSTRAINT FK_TBL_EST_PROD_UNIDADE_MEDID FOREIGN KEY (ID_UNIDADE_MEDIDA) REFERENCES TBL_EST_UNIDADE_MEDIDA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_SAIDA ADD CONSTRAINT FK_TBL_EST_SAIDA_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_EST_SAIDA ADD CONSTRAINT FK_TBL_EST_SAIDA_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_FORNECEDOR ADD CONSTRAINT FK_TBL_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_FORNECEDOR ADD CONSTRAINT FK_TBL_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_LOG ADD CONSTRAINT FK_TBL_LOG_1 FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_LOG ADD CONSTRAINT FK_TBL_LOG_ID_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_GRUPO ADD CONSTRAINT FK_TBL_PAST_GRUPO_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_GRUPO ADD CONSTRAINT FK_TBL_PAST_GRUPO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_GRUPO_MEMBRO ADD CONSTRAINT FK_TBL_PAST_GM_ID_GRUPO FOREIGN KEY (ID_GRUPO) REFERENCES TBL_PAST_GRUPO (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_GRUPO_MEMBRO ADD CONSTRAINT FK_TBL_PAST_GM_ID_MEMBRO FOREIGN KEY (ID_MEMBRO) REFERENCES TBL_PAST_MEMBRO (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_FUNCAO_E FOREIGN KEY (FUNCAO_EXERCEU_IGREJA) REFERENCES TBL_FUNCAO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_FUNCAO_G FOREIGN KEY (FUNCAO_GOSTARIA_EXERCER) REFERENCES TBL_FUNCAO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_IGREJA_B FOREIGN KEY (ID_IGREJA_BATISMO) REFERENCES TBL_PAST_IGREJA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_NATURALIDADE FOREIGN KEY (ID_NATURALIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_PASTOR_B FOREIGN KEY (ID_PASTOR_BATISMO) REFERENCES TBL_PAST_PASTOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_PROFISSAO FOREIGN KEY (ID_PROFISSAO) REFERENCES TBL_PROFISSAO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAST_MEMBRO ADD CONSTRAINT FK_TBL_PAST_MEMBRO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_CATEGORIA FOREIGN KEY (ID_CATEGORIA) REFERENCES TBL_CATEGORIA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES TBL_FORNECEDOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_PATRIMONIO_1 FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_PATRIMONIO_2 FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_PATRIMONIO_MOTIVO_BAIXA FOREIGN KEY (ID_MOTIVO_BAIXA) REFERENCES TBL_PAT_MOTIVO_BAIXA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PATRIMONIO ADD CONSTRAINT FK_TBL_SETOR FOREIGN KEY (ID_SETOR) REFERENCES TBL_SETOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT FK_TBL_PAT_IMOVEL_CARTORIO FOREIGN KEY (ID_CARTORIO) REFERENCES TBL_CARTORIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT FK_TBL_PAT_IMOVEL_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT FK_TBL_PAT_IMOVEL_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_PAT_IMOVEL ADD CONSTRAINT FK_TBL_PAT_IMOVEL_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_RESPONSAVEL ADD CONSTRAINT FK_TBL_RESPONSAVEL_1 FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_RESPONSAVEL ADD CONSTRAINT FK_TBL_RESPONSAVEL_2 FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_SETOR ADD CONSTRAINT FK_TBL_SETOR_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON DELETE SET NULL ON UPDATE CASCADE
  USING INDEX FK_TBL_SETOR_3;
ALTER TABLE TBL_SETOR ADD CONSTRAINT FK_TBL_SETOR_RESP_ATUAL FOREIGN KEY (ID_RESPONSAVEL_ATUAL) REFERENCES TBL_RESPONSAVEL (ID) ON DELETE SET NULL ON UPDATE CASCADE
  USING INDEX FK_TBL_SETOR_2;
ALTER TABLE TBL_SETOR ADD CONSTRAINT FK_TBL_SETOR_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE
  USING INDEX FK_TBL_SETOR_1;
ALTER TABLE TBL_SETOR ADD CONSTRAINT FK_TBL_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA ADD CONSTRAINT FK_TBL_TRANSF_MOTIVO FOREIGN KEY (ID_MOTIVO) REFERENCES TBL_MOTIVO_TRANSFERENCIA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA ADD CONSTRAINT FK_TBL_TRANSF_SETOR_DESTINO FOREIGN KEY (ID_SETOR_DESTINO) REFERENCES TBL_SETOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA ADD CONSTRAINT FK_TBL_TRANSF_SETOR_ORIGEM FOREIGN KEY (ID_SETOR_ORIGEM) REFERENCES TBL_SETOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA ADD CONSTRAINT FK_TBL_TRANSF_UNIDADE FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA_ITENS ADD CONSTRAINT FK_TBL_TRANSF_ITENS_PATRIMONIO FOREIGN KEY (ID_PATRIMONIO) REFERENCES TBL_PATRIMONIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA_ITENS ADD CONSTRAINT FK_TBL_TRANSF_ITENS_TRANSF FOREIGN KEY (ID_TRANSFERENCIA) REFERENCES TBL_TRANSFERENCIA (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA_PATRIMONIO ADD CONSTRAINT FK_TBL_PATRIMONIO FOREIGN KEY (ID_PATRIMONIO) REFERENCES TBL_PATRIMONIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_TRANSFERENCIA_PATRIMONIO ADD CONSTRAINT FK_TBL_SETOR_DESTINO FOREIGN KEY (ID_SETOR_DESTINO) REFERENCES TBL_SETOR (ID);
ALTER TABLE TBL_TRANSFERENCIA_PATRIMONIO ADD CONSTRAINT FK_TBL_SETOR_ORIGEM FOREIGN KEY (ID_SETOR_ORIGEM) REFERENCES TBL_SETOR (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_UNIDADE ADD CONSTRAINT FK_TBL_UNIDADE_1 FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_UNIDADE ADD CONSTRAINT FK_TBL_UNIDADE_2 FOREIGN KEY (ID_CIDADE) REFERENCES TBL_CIDADE (ID) ON UPDATE CASCADE;
ALTER TABLE TBL_USUARIO_UNIDADE ADD CONSTRAINT FK_TBL_USUARIO_UNIDADE2 FOREIGN KEY (ID_UNIDADE) REFERENCES TBL_UNIDADE (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TBL_USUARIO_UNIDADE ADD CONSTRAINT FK_TBL_USUARIO_UNIDADE_1 FOREIGN KEY (ID_USUARIO) REFERENCES TBL_USUARIO (ID) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: INSERI_ESTOQUE_INICIAL_PRODUTO */
CREATE TRIGGER INSERI_ESTOQUE_INICIAL_PRODUTO FOR TBL_EST_PRODUTO
ACTIVE AFTER INSERT POSITION 0
AS
begin
    INSERT INTO TBL_EST_ESTOQUE (ID, ID_PRODUTO, QUANTIDADE_ATUAL)
     VALUES(GEN_ID(GEN_TBL_EST_ESTOQUE_ID, 1), NEW.ID, 0);
end
^

/* Trigger: ITENS_ENTRADA_ALTERA_ESTOQUE */
CREATE TRIGGER ITENS_ENTRADA_ALTERA_ESTOQUE FOR TBL_EST_ITENS_ENTRADA
ACTIVE AFTER UPDATE POSITION 0
AS

begin
    UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL - OLD.QUANTIDADE) + NEW.QUANTIDADE
      WHERE E.ID_PRODUTO = NEW.ID_PRODUTO;
end
^

/* Trigger: ITENS_ENTRADA_DIMINUI_ESTOQUE */
CREATE TRIGGER ITENS_ENTRADA_DIMINUI_ESTOQUE FOR TBL_EST_ITENS_ENTRADA
ACTIVE AFTER DELETE POSITION 0
AS
begin
    UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL - OLD.QUANTIDADE)
      WHERE E.ID_PRODUTO = OLD.ID_PRODUTO;
end
^

/* Trigger: ITENS_ENTRADA_INSERE_ESTOQUE */
CREATE TRIGGER ITENS_ENTRADA_INSERE_ESTOQUE FOR TBL_EST_ITENS_ENTRADA
ACTIVE AFTER INSERT POSITION 0
AS

begin
    UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL + NEW.QUANTIDADE)
      WHERE E.ID_PRODUTO = NEW.ID_PRODUTO;
end
^

/* Trigger: ITENS_SAIDA_ALTERA_ESTOQUE */
CREATE TRIGGER ITENS_SAIDA_ALTERA_ESTOQUE FOR TBL_EST_ITENS_SAIDA
ACTIVE AFTER UPDATE POSITION 0
AS
begin

   UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL + OLD.QUANTIDADE) - NEW.QUANTIDADE
      WHERE E.ID_PRODUTO = NEW.ID_PRODUTO;
end
^

/* Trigger: ITENS_SAIDA_EXCLUI_SAIDA */
CREATE TRIGGER ITENS_SAIDA_EXCLUI_SAIDA FOR TBL_EST_ITENS_SAIDA
ACTIVE BEFORE DELETE POSITION 0
AS
begin
    UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL + OLD.QUANTIDADE)
      WHERE E.ID_PRODUTO = OLD.ID_PRODUTO;
end
^

/* Trigger: ITENS_SAIDA_INSERE_SAIDA */
CREATE TRIGGER ITENS_SAIDA_INSERE_SAIDA FOR TBL_EST_ITENS_SAIDA
ACTIVE AFTER INSERT POSITION 0
AS
begin
    UPDATE TBL_EST_ESTOQUE E SET E.QUANTIDADE_ATUAL = (E.QUANTIDADE_ATUAL - NEW.QUANTIDADE)
      WHERE E.ID_PRODUTO = NEW.ID_PRODUTO;
end
^

/* Trigger: TBL_PAST_GRUPO_MEMBRO_BI */
CREATE TRIGGER TBL_PAST_GRUPO_MEMBRO_BI FOR TBL_PAST_GRUPO_MEMBRO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tbl_past_grupo_membro_id,1);
end
^

/* Trigger: TBL_USUARIO_UNIDADE_BI */
CREATE TRIGGER TBL_USUARIO_UNIDADE_BI FOR TBL_USUARIO_UNIDADE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tbl_usuario_unidade_id,1);
end
^

SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

DESCRIBE FIELD NIVEL TABLE TBL_LOG
'1 = Nivel Baixo | 2 = Nivel Normal | 3 = Nivel Alto';

DESCRIBE FIELD MODO_ADMISSAO TABLE TBL_PAST_MEMBRO
'0 = Batismo | 1 = Carta | 2 = Reconciliacao | 3 = Aclamacao';

DESCRIBE FIELD DIZIMISTA TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD OFERTANTE TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD SITUACAO TABLE TBL_PAST_MEMBRO
'0 = Inativo | 1 = Ativo';

DESCRIBE FIELD TIPOS_SAIDA_MEMBRO TABLE TBL_PAST_MEMBRO
'0 = Falecimento | 1 = Carta(Transferencia) | 2 = Evasao';

DESCRIBE FIELD NACIONALIDADE TABLE TBL_PAST_MEMBRO
'0 = Brasileira | 1 = Extrangeira';

DESCRIBE FIELD MINISTERIO_ENSINO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_LOUVOR TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_INFANTIL TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_BERCARIO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_ACOLHIMENTO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_SURDOS TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_COMUNICACAO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_ADMINISTRACAO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD MINISTERIO_EVANGELISMO TABLE TBL_PAST_MEMBRO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD TIPO_AQUISICAO TABLE TBL_PATRIMONIO
'0 = Comprado | 1 = Doacao ';

DESCRIBE FIELD ESTADO TABLE TBL_PATRIMONIO
'0 = Novo | 1 = Bom | 2 = Regular';

DESCRIBE FIELD SITUACAO TABLE TBL_PATRIMONIO
'0 = Baixado | 1 = Ativo | 2 = Transferido';

DESCRIBE FIELD ZONA_RESIDENCIA TABLE TBL_PAT_IMOVEL
'0 = Urbana | 1 = Rural';

DESCRIBE FIELD NUMERO_IMOVEL TABLE TBL_PAT_IMOVEL
'Identificador unico, usar numero de codigo de barras para identificacao pelo aplicativo';

DESCRIBE FIELD ATIVO TABLE TBL_SETOR
'0 = Inativo | 1 = Ativo';

DESCRIBE FIELD ATIVO TABLE TBL_UNIDADE
'0 = Inativo | 1 = Ativo';

DESCRIBE FIELD ADMINISTRADOR TABLE TBL_USUARIO
'0 = Nao | 1 = Sim';

DESCRIBE FIELD SITUACAO TABLE TBL_USUARIO
'0 = Inativo | 1 = Ativo | 2 = Bloqueado';

